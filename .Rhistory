setwd("~/GitHub/R")
install.packages("moments")
library(moments)
#a) DETERMINAR LA SIMETRIA DE SUS DISTRIBUCIONES
skewness(altura) #ASIMETRIA
source("~/GitHub/R/Practica 3.R", echo=TRUE)
source("~/GitHub/R/Practica 3.R", echo=TRUE)
source("~/GitHub/R/Practica 3.R", echo=TRUE)
source("~/GitHub/R/Practica 3.R", echo=TRUE)
#c)
edad<-seq(18,by = 0.75,length.out = 10);edad
#b)
peso<-seq(71,77,length.out = 10);peso
#e)
grado.f<-as.factor(grado)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
summary(grado.f)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
source("~/GitHub/R/Practica 1.R", echo=TRUE)
#f)
grado.f
str(grado.f)
#d)
which(is.na(v))
#d)
is.na(v)
which(is.na(v))
source("~/GitHub/R/Practica 2.R", echo=TRUE)
#Ejercicio 2
#a)
fabs<-table(datos$Grado);fabs #Frecuencia Absoluta
View(datos)
frel<-prop.table(fabs);frel #Frecuencia Relativa
#f)
plot(fabs, type="l",col="red",lwd=3,xlab="Grado",ylab="Frecunecia absoluta",main="Poligono de frecuencias")
plot(fabs, type="b",col="red",lwd=3,xlab="Grado",ylab="Frecunecia absoluta",main="Poligono de frecuencias")
nclass.Sturges(datos$Altura)
source("~/GitHub/R/Practica 2.R", echo=TRUE)
#c)
stem(datos$Altura)
stem(datos$Altura,2)
stem(datos$Altura,0.25,85)
#b)
lim<-seq(L,H,A);lim #Los limites puestos como un Array
L<-min(datos$Altura);H<-max(datos$Altura);L;H;A<-(H-L)/k;A #CALCULAMOS LOS INTERVALOS
intervalos=levels(int.clase);intervalos
#d)
h=hist(datos$Altura,lim,include.lowest=TRUE, right=TRUE, plot=FALSE)
str(h)
